<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on Chris Wiki</title>
    <link>http://christh0x.github.io/docs/wiki/research/java/spring/</link>
    <description>Recent content in Spring on Chris Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://christh0x.github.io/docs/wiki/research/java/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Express Language</title>
      <link>http://christh0x.github.io/docs/wiki/research/java/spring/spring-express-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://christh0x.github.io/docs/wiki/research/java/spring/spring-express-language/</guid>
      <description>语法 # 静态方法调用 # &amp;quot;T(System).currentTimeMillis()&amp;quot;
Bean实例方法调用 # &amp;quot;@beanName.method()&amp;quot;
List # &amp;quot;list[0].property&amp;quot;
&amp;quot;T(com.google.common.collect.Lists).partition({&#39;a&#39;, &#39;b&#39;, &#39;c&#39;}, 1)&amp;quot;
Map # &amp;quot;map[key].property&amp;quot;
&amp;quot;T(com.google.common.collect.Maps).newHashMap({&#39;k&#39;: &#39;v&#39;})&amp;quot;
使用方式 # 注解使用 # public class Test { @Value(&amp;#34;&amp;#39;Hello World&amp;#39;.concat(&amp;#39;!&amp;#39;)&amp;#34;) private String value; } 代码调用 # public class Test { public static void main(String[] args) { // 1 定义解析器 SpelExpressionParser parser = new SpelExpressionParser(); // 2 使用解析器解析表达式 Expression exp = parser.parseExpression(&amp;#34;&amp;#39;Hello World&amp;#39;.concat(&amp;#39;!&amp;#39;)&amp;#34;); // 3 获取解析结果 String value = (String) exp.</description>
    </item>
    
  </channel>
</rss>
